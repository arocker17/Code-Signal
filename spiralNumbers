// Construct a square matrix with a size N Ã— N containing integers from 1 to N * N in a spiral order, starting from top-left and in clockwise direction.

CODE:

function solution(n) {
    const matrix = Array.from({ length: n }, () => Array.from({ length: n }, () => 0));
    
    let value = 1;
    let topRow = 0;
    let bottomRow = n - 1;
    let leftCol = 0;
    let rightCol = n - 1;
    
    while (topRow <= bottomRow && leftCol <= rightCol) {
        for (let col = leftCol; col <= rightCol; col++) {
            matrix[topRow][col] = value++
        }
        topRow++;
        
        for (let row = topRow; row <= bottomRow; row++) {
            matrix[row][rightCol] = value++;
        }
        rightCol--;
        
        for (let col = rightCol; col >= leftCol; col--) {
            matrix[bottomRow][col] = value++;
        }
        bottomRow--;
        
        for (let row = bottomRow; row >= topRow; row--) {
            matrix[row][leftCol] = value++;
        }
        leftCol++;
    }
    
    return matrix;
}
